// Code generated by counterfeiter. DO NOT EDIT.
package constructfakes

import (
	"sync"

	"github.com/cloudfoundry/stembuild/construct"
)

type FakeRebootWaiterI struct {
	WaitForRebootFinishedStub        func() error
	waitForRebootFinishedMutex       sync.RWMutex
	waitForRebootFinishedArgsForCall []struct {
	}
	waitForRebootFinishedReturns struct {
		result1 error
	}
	waitForRebootFinishedReturnsOnCall map[int]struct {
		result1 error
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeRebootWaiterI) WaitForRebootFinished() error {
	fake.waitForRebootFinishedMutex.Lock()
	ret, specificReturn := fake.waitForRebootFinishedReturnsOnCall[len(fake.waitForRebootFinishedArgsForCall)]
	fake.waitForRebootFinishedArgsForCall = append(fake.waitForRebootFinishedArgsForCall, struct {
	}{})
	stub := fake.WaitForRebootFinishedStub
	fakeReturns := fake.waitForRebootFinishedReturns
	fake.recordInvocation("WaitForRebootFinished", []interface{}{})
	fake.waitForRebootFinishedMutex.Unlock()
	if stub != nil {
		return stub()
	}
	if specificReturn {
		return ret.result1
	}
	return fakeReturns.result1
}

func (fake *FakeRebootWaiterI) WaitForRebootFinishedCallCount() int {
	fake.waitForRebootFinishedMutex.RLock()
	defer fake.waitForRebootFinishedMutex.RUnlock()
	return len(fake.waitForRebootFinishedArgsForCall)
}

func (fake *FakeRebootWaiterI) WaitForRebootFinishedCalls(stub func() error) {
	fake.waitForRebootFinishedMutex.Lock()
	defer fake.waitForRebootFinishedMutex.Unlock()
	fake.WaitForRebootFinishedStub = stub
}

func (fake *FakeRebootWaiterI) WaitForRebootFinishedReturns(result1 error) {
	fake.waitForRebootFinishedMutex.Lock()
	defer fake.waitForRebootFinishedMutex.Unlock()
	fake.WaitForRebootFinishedStub = nil
	fake.waitForRebootFinishedReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeRebootWaiterI) WaitForRebootFinishedReturnsOnCall(i int, result1 error) {
	fake.waitForRebootFinishedMutex.Lock()
	defer fake.waitForRebootFinishedMutex.Unlock()
	fake.WaitForRebootFinishedStub = nil
	if fake.waitForRebootFinishedReturnsOnCall == nil {
		fake.waitForRebootFinishedReturnsOnCall = make(map[int]struct {
			result1 error
		})
	}
	fake.waitForRebootFinishedReturnsOnCall[i] = struct {
		result1 error
	}{result1}
}

func (fake *FakeRebootWaiterI) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.waitForRebootFinishedMutex.RLock()
	defer fake.waitForRebootFinishedMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeRebootWaiterI) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ construct.RebootWaiterI = new(FakeRebootWaiterI)
